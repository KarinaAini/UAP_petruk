#include <iostream>
#include <vector>
#include <queue>
#include <list>
#include <deque>
#include <stack>
#include <cstring>  // untuk strcmp, strcpy
#include <algorithm>
using namespace std;

struct MenuItem {
    char nama[30];
    int harga;
};

struct Pesanan {
    char namaPelanggan[50];
    vector<int> jumlah;
    int total;
};

vector<MenuItem> menu = {
    {"Nasi Goreng", 15000},
    {"Mie Ayam", 12000},
    {"Nasi kuning", 16000},
    {"Sate Ayam", 18000},
    {"Es Teh", 5000},
    {"Jus Jeruk", 8000},
    {"Jus Stroberi", 8500},
    {"Tempe goreng + Sambal terasi", 4500},
    {"Tahu goreng + Sambal matah", 6500},
    {"Air mineral", 3500},
};

queue<Pesanan> antrian;
deque<Pesanan> pesananPrioritas;
list<Pesanan> riwayatTransaksi;
stack<Pesanan> stackPembatalan;

int hitungTotalDivide(vector<int>& jumlah, int l, int r) {
    if (l == r) return jumlah[l] * menu[l].harga;
    int mid = (l + r) / 2;
    return hitungTotalDivide(jumlah, l, mid) + hitungTotalDivide(jumlah, mid + 1, r);
}

bool bandingkan(Pesanan a, Pesanan b) {
    return a.total > b.total;
}

int knapsack(int maxUang, vector<int>& nilai, vector<int>& berat, int n) {
    if (n == 0 || maxUang == 0) return 0;
    if (berat[n - 1] > maxUang)
        return knapsack(maxUang, nilai, berat, n - 1);
    return max(
        nilai[n - 1] + knapsack(maxUang - berat[n - 1], nilai, berat, n - 1),
        knapsack(maxUang, nilai, berat, n - 1)
    );
}
#lanjutin
// Fungsi input pesanan
void inputPesanan() {
    int pilihan, jumlah;
    char lanjut;
    do {
        cout << "Masukkan nomor menu yang ingin dipesan: ";
        cin >> pilihan;
        if (pilihan < 1 || pilihan > JUMLAH_MENU) {
            cout << "Pilihan tidak valid!" << endl;
        } else {
            cout << "Jumlah porsi: ";
            cin >> jumlah;
            jumlahPesanan[pilihan - 1] += jumlah;
        }

        cout << "Tambah pesanan lagi? (y/n): ";
        cin >> lanjut;
    } while (lanjut == 'y' || lanjut == 'Y');
}

// Fungsi menghitung total
int hitungTotal() {
    int total = 0;
    for (int i = 0; i < JUMLAH_MENU; i++) {
        total += hargaMenu[i] * jumlahPesanan[i];
    }
    return total;
}

// Fungsi menampilkan struk
void tampilkanStruk(int total) {
    cout << "\n======= STRUK PESANAN =======" << endl;
    for (int i = 0; i < JUMLAH_MENU; i++) {
        if (jumlahPesanan[i] > 0) {
            cout << daftarMenu[i] << " x" << jumlahPesanan[i]
                 << " = Rp" << hargaMenu[i] * jumlahPesanan[i] << endl;
        }
    }
    cout << "-----------------------------" << endl;

    // Percabangan untuk diskon
    if (total >= 100000) {
        int diskon = total * 0.1;
        cout << "Diskon 10%: -Rp" << diskon << endl;
        total -= diskon;
    }

    cout << "TOTAL BAYAR : Rp" << total << endl;
    cout << "=============================" << endl;
}

// Fungsi utama
int main() {
    tampilkanMenu();
    inputPesanan();
    int total = hitungTotal();
    tampilkanStruk(total);
    return 0;
}
